/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package SEPackage;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author Sudhanshu's
 */
public class StartGUI extends javax.swing.JFrame {

    /**
     * Creates new form StartGUI
     */
    
        ResultSet rs;
        DatabaseConnection db;
    public StartGUI() throws IOException {
        initComponents();
        Panel_Buttons.setVisible(false);
        ScrollPane.setOpaque(false);
        ScrollPane.getViewport().setOpaque(false);
        row_col=new int[3][2];
        ScrollPane.setOpaque(false);
        ScrollPane.getViewport().setOpaque(false);
        
        setScrollPanel();
        initLabels(label_player,row_col[0][0],row_col[0][1],"player");
        //setOwnerScrollPanel();
        //initLabels(label_owner,row_col[1][0],row_col[1][1],"owner");
        //setTeamScrollPanel();
        //initLabels(label_team,row_col[2][0],row_col[2][1],"team");
        rs = null;
        db = new DatabaseConnection();
        rs = db.getPlayerStatistics("Sachin Tendulkar", "2008");
        try {
            while(rs.next()){
                String name = rs.getString("name");
                int runs = rs.getInt(4);
                int wickets = rs.getInt(5);
                int num_of_innings = rs.getInt(6);
                float bat_strikerate = rs.getFloat(7);
                float bowl_strikerate = rs.getFloat(8);
                float batting_average = rs.getFloat(9);
                float bowling_average = rs.getFloat(10);
                float economy = rs.getFloat(11);
                int number_of_fifties = rs.getInt(12);
                int number_of_centuries = rs.getInt(13);
                float base_price = rs.getFloat(14);
                
                System.out.println("Person name : "+name);
                System.out.println("Runs : "+Integer.toString(runs));
                System.out.println("Wickets : "+Integer.toString(wickets));
                System.out.println("Number of Innings : "+Integer.toString(num_of_innings));
                System.out.println("Batting Strike rate : "+Float.toString(bat_strikerate));
                System.out.println("Bowling Strike rate : "+Float.toString(bowl_strikerate));
                System.out.println("Batting Average : "+Float.toString(batting_average));
                System.out.println("Bowling Average : "+Float.toString(bowling_average));
                System.out.println("Economy : "+Float.toString(economy));
                System.out.println("Number of 50's : "+Integer.toString(number_of_fifties));
                System.out.println("Number of 100's : "+Integer.toString(number_of_centuries));
                System.out.println("Base Price : "+Float.toString(base_price));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(StartGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Main = new javax.swing.JPanel();
        B_Players = new javax.swing.JLabel();
        B_Teams = new javax.swing.JLabel();
        B_Owners = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        Panel_List = new javax.swing.JPanel();
        Label_Close = new javax.swing.JLabel();
        Panel_Person = new javax.swing.JPanel();
        Label_Sex = new javax.swing.JLabel();
        Label_Nationality = new javax.swing.JLabel();
        Label_Image = new javax.swing.JLabel();
        Label_Name = new javax.swing.JLabel();
        Panel_Buttons = new javax.swing.JPanel();
        Label_2008 = new javax.swing.JLabel();
        Label_2009 = new javax.swing.JLabel();
        Label_2010 = new javax.swing.JLabel();
        Label_2011 = new javax.swing.JLabel();
        Label_2012 = new javax.swing.JLabel();
        Label_2013 = new javax.swing.JLabel();
        Label_2014 = new javax.swing.JLabel();
        Label_Buttons = new javax.swing.JLabel();
        Panel_Statistics = new javax.swing.JPanel();
        Bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Panel_Main.setMinimumSize(new java.awt.Dimension(1152, 700));
        Panel_Main.setPreferredSize(new java.awt.Dimension(1152, 700));
        Panel_Main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_Players.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Main.add(B_Players, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 120, 40));

        B_Teams.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Main.add(B_Teams, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 110, 40));

        B_Owners.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Main.add(B_Owners, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 130, 40));

        ScrollPane.setBorder(null);
        ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ScrollPane.setToolTipText("");
        ScrollPane.setAutoscrolls(true);
        ScrollPane.setOpaque(false);

        Panel_List.setBackground(new java.awt.Color(153, 153, 153));
        Panel_List.setOpaque(false);
        Panel_List.setPreferredSize(new java.awt.Dimension(376, 512));

        javax.swing.GroupLayout Panel_ListLayout = new javax.swing.GroupLayout(Panel_List);
        Panel_List.setLayout(Panel_ListLayout);
        Panel_ListLayout.setHorizontalGroup(
            Panel_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        Panel_ListLayout.setVerticalGroup(
            Panel_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );

        ScrollPane.setViewportView(Panel_List);

        Panel_Main.add(ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 380, 500));

        Label_Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SEPackage/image/Close.png"))); // NOI18N
        Label_Close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Label_Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Label_CloseMouseClicked(evt);
            }
        });
        Panel_Main.add(Label_Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 130, 32, 32));

        Panel_Person.setOpaque(false);

        Label_Sex.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        Label_Sex.setForeground(new java.awt.Color(102, 0, 0));

        Label_Nationality.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        Label_Nationality.setForeground(new java.awt.Color(102, 0, 0));

        Label_Name.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        Label_Name.setForeground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout Panel_PersonLayout = new javax.swing.GroupLayout(Panel_Person);
        Panel_Person.setLayout(Panel_PersonLayout);
        Panel_PersonLayout.setHorizontalGroup(
            Panel_PersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PersonLayout.createSequentialGroup()
                .addComponent(Label_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(Panel_PersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_PersonLayout.createSequentialGroup()
                        .addComponent(Label_Nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(Label_Sex, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Panel_PersonLayout.setVerticalGroup(
            Panel_PersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_PersonLayout.createSequentialGroup()
                .addGroup(Panel_PersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_PersonLayout.createSequentialGroup()
                        .addComponent(Label_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(Panel_PersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_Nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Label_Sex, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Panel_Main.add(Panel_Person, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 530, 140));

        Panel_Buttons.setOpaque(false);
        Panel_Buttons.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Label_2008.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2008, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 100, 40));

        Label_2009.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2009, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 100, 40));

        Label_2010.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2010, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 90, 40));

        Label_2011.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2011, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 100, 40));

        Label_2012.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2012, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 100, 40));

        Label_2013.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2013, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, 90, 40));

        Label_2014.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Panel_Buttons.add(Label_2014, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 100, 40));

        Label_Buttons.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SEPackage/image/buttons copy.png"))); // NOI18N
        Panel_Buttons.add(Label_Buttons, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 40));

        Panel_Main.add(Panel_Buttons, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, 730, 40));

        Panel_Statistics.setOpaque(false);

        javax.swing.GroupLayout Panel_StatisticsLayout = new javax.swing.GroupLayout(Panel_Statistics);
        Panel_Statistics.setLayout(Panel_StatisticsLayout);
        Panel_StatisticsLayout.setHorizontalGroup(
            Panel_StatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        Panel_StatisticsLayout.setVerticalGroup(
            Panel_StatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        Panel_Main.add(Panel_Statistics, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 500, 290));

        Bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SEPackage/image/ipl_home copy.jpg"))); // NOI18N
        Bg.setAlignmentY(0.0F);
        Panel_Main.add(Bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1152, 700));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Label_CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Label_CloseMouseClicked
        Panel_Person.setVisible(false);
        Panel_Buttons.setVisible(false);
    }//GEN-LAST:event_Label_CloseMouseClicked
    
    public ArrayList<String> listFilesForFolder(final File folder) {
        ArrayList<String> lists=new ArrayList<String>();
        for (final File fileEntry : folder.listFiles()) {
        if (fileEntry.isDirectory()) {
            listFilesForFolder(fileEntry);
        } else {
            lists.add(fileEntry.getName());
        }
    }
        return lists;
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new StartGUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(StartGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel B_Owners;
    private javax.swing.JLabel B_Players;
    private javax.swing.JLabel B_Teams;
    private javax.swing.JLabel Bg;
    private javax.swing.JLabel Label_2008;
    private javax.swing.JLabel Label_2009;
    private javax.swing.JLabel Label_2010;
    private javax.swing.JLabel Label_2011;
    private javax.swing.JLabel Label_2012;
    private javax.swing.JLabel Label_2013;
    private javax.swing.JLabel Label_2014;
    private javax.swing.JLabel Label_Buttons;
    private javax.swing.JLabel Label_Close;
    private javax.swing.JLabel Label_Image;
    private javax.swing.JLabel Label_Name;
    private javax.swing.JLabel Label_Nationality;
    private javax.swing.JLabel Label_Sex;
    private javax.swing.JPanel Panel_Buttons;
    private javax.swing.JPanel Panel_List;
    private javax.swing.JPanel Panel_Main;
    private javax.swing.JPanel Panel_Person;
    private javax.swing.JPanel Panel_Statistics;
    private javax.swing.JScrollPane ScrollPane;
    // End of variables declaration//GEN-END:variables
    private RoundedLabel label_player[][];
    private JLabel label_owner[][];
    private JLabel label_team[][];
    private String player_position[][];
    private String owner_position[][];
    private String team_position[][];
    ArrayList<String> lists;
    private int row_col[][];//0-player,1-owner,2-team
    
    private void setScrollPanel() throws IOException {
        final File folder = new File(".\\Images\\");
        lists=listFilesForFolder(folder);
        int len=lists.size(),count=0,padd_hor=120,padd_ver=100;
        int col=3,row=(lists.size()/col)+1;
        row_col[0][0]=row;
        row_col[0][1]=col;
        //Panel_List=new JPanel(new GridLayout(0,5));
        label_player=new RoundedLabel[row][col];
        player_position=new String[row][col];
        System.out.println(len);
        
        Panel_List.setPreferredSize(new Dimension(376, 100*row));
        
        for(int i=0;i<row&&count<len;i++)
        {
            for(int j=0;j<col&&count<len;j++,count++)
            {
                BufferedImage img = null;
                img = ImageIO.read(new File(".\\Images\\"+lists.get(count)));
                Image dimg = img.getScaledInstance(60, 60,Image.SCALE_SMOOTH);
                ImageIcon icon = new ImageIcon(dimg);
                int posx,posy;
                if(j==0)
                    posx=20;
                else
                    posx=label_player[i][j-1].getX()+padd_hor;
                if(i==0)
                    posy=20;
                else
                    posy=label_player[i-1][j].getY()+padd_ver;
                
                
                label_player[i][j] = new RoundedLabel(posx,posy,60,60,img);
                label_player[i][j].setBounds(posx,posy,50,50);
                
                //label_player[i][j].setIcon(icon);
                player_position[i][j]=lists.get(count).substring(0,lists.get(count).length()-4);
                
                
                JLabel name=new JLabel(player_position[i][j],SwingConstants.CENTER);
                name.setBounds(posx-10,posy+62,80,20);
                name.setFont(new Font("Comic Sans MS", Font.PLAIN, 10));
                name.setForeground(Color.BLACK);
                
                Panel_List.add(name);
                Panel_List.add(label_player[i][j]);
                Panel_List.repaint();
                revalidate();
                }
                if(count>=len)
                break;
            }
            ScrollPane.updateUI();
            ScrollPane.setVisible(true);
            Panel_List.updateUI();
            Panel_List.setVisible(true);
    }

    private void initLabels(JLabel label[][],int row,int col,String type) {
        //label_player,label_owner,label_team
        System.out.println(label.length);
        int i,j;
        final String option=type;
        for(i=0;i<row;i++)
        {
            for(j=0;j<col;j++)
            {
                final int i_=i;
                final int j_=j;
                try{
                    label[i][j].setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    label[i][j].addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        Panel_Person.setVisible(true);
                        Panel_Buttons.setVisible(true);
                        if(option.equalsIgnoreCase("player"))
                        {
                            try {
                                label_playerMouseClicked(evt,i_,j_);
                            } catch (IOException ex) {
                                Logger.getLogger(StartGUI.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(StartGUI.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        else if(option.equalsIgnoreCase("owner"))
                        {
                            label_ownerMouseClicked(evt,i_,j_);
                        }
                        else
                            label_teamMouseClicked(evt,i_,j_);
                }
                });
                } catch(Exception E)
                {
                    //E.printStackTrace();
                }
            }
        }
    }
    
    private void setTeamScrollPanel() {
        
    }

    private void setOwnerScrollPanel() {
        
    }
    
    private void label_playerMouseClicked(MouseEvent evt, int i, int j) throws IOException, SQLException {
        BufferedImage img = null;
        
        img = ImageIO.read(new File(".\\Images\\"+lists.get(i*3+j)));
        Image dimg = img.getScaledInstance(120, 140,Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(dimg);
        Label_Name.setText(player_position[i][j]);
        Label_Image.setIcon(icon);
        rs=db.getPlayerDetails(player_position[i][j]);
        //System.out.println(rs);
        while(rs.next())
        {
            Label_Nationality.setText(rs.getString("nationality"));
            Label_Sex.setText(rs.getString("sex"));
        }
    }
    private void label_ownerMouseClicked(MouseEvent evt, int i, int j) {
        
    }
    private void label_teamMouseClicked(MouseEvent evt, int i, int j) {
        
    }
    
    private void button_yearsMouseClicked(MouseEvent evt, int i) throws SQLException {
        Panel_Statistics.removeAll();
        i+=2008;
        rs=db.getPlayerStatistics(Label_Name.getText(),i+"");
        int x=60,y=10,font=15,offset=0;
        JLabel data;
        while(rs.next()){
                int runs = rs.getInt(4);
                int wickets = rs.getInt(5);
                int num_of_innings = rs.getInt(6);
                float bat_strikerate = rs.getFloat(7);
                float bowl_strikerate = rs.getFloat(8);
                float batting_average = rs.getFloat(9);
                float bowling_average = rs.getFloat(10);
                float economy = rs.getFloat(11);
                int number_of_fifties = rs.getInt(12);
                int number_of_centuries = rs.getInt(13);
                float base_price = rs.getFloat(14);
                
                data=new JLabel("Runs : "+Integer.toString(runs));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Wickets : "+Integer.toString(wickets));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Number of Innings : "+Integer.toString(num_of_innings));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Batting Strike rate : "+Float.toString(bat_strikerate));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Bowling Strike rate : "+Float.toString(bowl_strikerate));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Batting Average : "+Float.toString(batting_average));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Bowling Average : "+Float.toString(bowling_average));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Economy : "+Float.toString(economy));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Number of 50's : "+Integer.toString(number_of_fifties));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Number of 100's : "+Integer.toString(number_of_centuries));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setForeground(new java.awt.Color(102, 0, 0));
                data.setBounds(x,y+offset,390,16);
                offset+=40;
                Panel_Statistics.add(data);
                data=new JLabel("Base Price : "+Float.toString(base_price));
                data.setFont(new java.awt.Font("Comic Sans MS", 0, font));
                data.setBounds(x,y+offset,390,16);
                data.setForeground(new java.awt.Color(102, 0, 0));
                offset+=40;
                Panel_Statistics.add(data);
            }
        Panel_Statistics.updateUI();
        Panel_Statistics.setVisible(true);
        
    }
}
